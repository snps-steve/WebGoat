trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  PROJECT_NAME: 'WebGoat-Azure'
  PROJECT_VERSION: '$(Build.SourceBranchName)-$(Build.BuildId)'

stages:
# ----------------------------
# 1) Build the Docker image
# ----------------------------
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: 'webgoat/webgoat'
        tags: |
          $(tag)

# -------------------------------------------------------
# 2) Security scans via Synopsys Security Scan (Bridge)
#    Job A: Black Duck SCA
#    Job B: Coverity (thin client via Bridge)
# -------------------------------------------------------
- stage: Security
  displayName: Security Scans
  dependsOn: Build
  jobs:

  # --- Black Duck SCA ---
  - job: BlackDuckSCA
    displayName: Black Duck SCA (Bridge)
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: JavaToolInstaller@0
      displayName: 'Use Temurin JDK 17'
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - script: |
        mvn -v
        mvn -B -DskipTests package
      displayName: 'Build WebGoat with Maven'

    # Bridge config for BD + (later) Coverity
    - script: |
        cat > bridge.yml <<'YAML'
        blackduck:
          url: ${BD_URL}
          token: ${BD_TOKEN}
          project:
            name: ${PROJECT_NAME}
            version: ${PROJECT_VERSION}
          # Optional: fail on policy
          # policy:
          #   failOn: policy
        coverity:
          connect:
            url: ${COV_URL}
            user: ${COV_USER}
            passphrase: ${COV_PASSPHRASE}
            stream: ${COV_STREAM}
          build:
            cleanCommand: mvn -B -DskipTests clean
            buildCommand: mvn -B -DskipTests package
        YAML
      displayName: 'Generate bridge.yml'

    # Use the Marketplace task (new ID)
    - task: BlackDuckSecurityScan@2.2.0
      displayName: 'Black Duck Security Scan - BD SCA'
      inputs:
        bridge_installation_type: 'download'   # or 'preinstalled'
        include_blackduck: true
        include_coverity: false
        blackduck_url: '$(BD_URL)'
        blackduck_token: '$(BD_TOKEN)'
        additional_args: '--config bridge.yml --diagnostic'

  # --- Coverity (Thin Client via Bridge) ---
  - job: Coverity
    displayName: Coverity (Bridge Thin Client)
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: JavaToolInstaller@0
      displayName: 'Use Temurin JDK 17'
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: BlackDuckSecurityScan@2.2.0
      displayName: 'Black Duck Security Scan â€“ Coverity'
      inputs:
        bridge_installation_type: 'download'
        include_blackduck: false
        include_coverity: true
        coverity_url: '$(COV_URL)'
        coverity_user: '$(COV_USER)'
        coverity_passphrase: '$(COV_PASSPHRASE)'
        additional_args: '--config bridge.yml --diagnostic'
